#!/bin/bash -e

## Run this script first upon logging into a new installation

## This script depends on "files/locale.gen" and more
cd /usr/local/aok


offline_setup () {

## Remove the default alarm (Arch Linux ARM) account.
## This account is only needed if you have to use SSH to login remotely
## for the very first login, which is not applicable here.
## The alarm account does not have mail, so
## silence the mail spool removal error message by using "2> /dev/null"
## and if somehow there is no user, then don't worry about it
userdel -r alarm 2> /dev/null || echo -n

## Fix Caps Lock for the Virtual Console.
## (The real console, without any Window Environment)
##
## These changes do not effect Caps Lock in a Window Environment,
## and do not effect consoles run while in a Window Environment.
##
## If you have a non-US keyboard layout, replace "us" with your keyboard type,
## but do not echo it to vconsole.conf until you are sure it works.
## Using loadkeys is safe for testing. It takes effect immediately,
## but does not apply permanent changes across reboots.
cp /usr/share/kbd/keymaps/i386/qwerty/us.map.gz \
    /usr/share/kbd/keymaps/us-chrome-caps.map.gz
gunzip /usr/share/kbd/keymaps/us-chrome-caps.map.gz
echo "keycode 125 = Caps_Lock" >> /usr/share/kbd/keymaps/us-chrome-caps.map
loadkeys /usr/share/kbd/keymaps/us-chrome-caps.map
echo "KEYMAP=us-chrome-caps" > /etc/vconsole.conf
echo "The Search Key is now Caps Lock"
echo "Caps Lock is OFF"

## Change root password
echo
echo "Enter a new root password"
passwd

## Set the time zone interactively
TIMEZONE=`tzselect`
ln -sf /usr/share/zoneinfo/${TIMEZONE} /etc/localtime

## Standard Arch Linux Recommendation, perhaps not necessary or needed
hwclock --systohc

## nano /etc/locale.gen AND UNCOMMENT LOCALE, OR USE PREMADE FILE
cp files/locale.gen /etc/locale.gen
locale-gen
echo "LANG=en_US.UTF-8" > /etc/locale.conf

## AOK SYSTEM CONFIGURATION
echo "ok" > /etc/hostname
cat << EOF > /etc/hosts
127.0.0.1	localhost
::1		localhost
127.0.1.1	ok.localdomain	ok
EOF
useradd -m -G wheel -s /bin/bash a

## Change password for the "a" account
echo
echo 'The default user account is just the letter "a"'
echo 'Enter a new password for the "a" account'
passwd a

## Disable systemd-resolved DNS managment because it breaks Wi-Fi hotspot
## landing pages
systemctl disable systemd-resolved

## Put a classic resolv.conf file in place, instead of what is now a broken link
rm /etc/resolv.conf
echo "nameserver 1.1.1.1" > /etc/resolv.conf

## INITIALIZE PACKAGE MANAGER
pacman-key --init
pacman-key --populate archlinuxarm

touch /root/.aok-offline-setup-done.temp

}

if [ ! -f /root/.aok-offline-setup-done.temp ]; then
  offline_setup
fi

## Run wifi-menu to get online
wifi-menu

## Using the network immediately after wifi-menu doesn't work
## Must wait for at least 6 second. 5 seconds fails.
echo "Waiting 10 seconds for network interface to be ready..."
sleep 10


## This part of the script depends on being online

###########################################################################
## UPGRADE AND INSTALL PACKAGES
##
## Sync repo, upgrade, and install packages without hassle
##
## sudo: needed to gain root privilege
## unzip: basic utility
## zip: basic utility
## xf86-video-fbdev: needed for Mali-T604 Graphics acceleration patch below
## alsa-utils: needed for auto (patch below); to unmute audio and keep unmuted
## xorg-server: needed for Xfce. chromebook caps (patch below)
## xfce4: Desktop Environment and all associated packages
## xorg-xinit: start Xfce from command line (configured below)
## lightdm: autostart Xfce on bootup (enabled below)
## lightdm-gtk-greeter: login screen
## ttf-dejavu: basic font pack
## networkmanager: networking backend (enabled below)
## nm-connection-editor: networking editor gui
## network-manager-applet: tray icon
## firefox: needed for landing page redirection for public Wi-Fi Hotspots
## blueman: bluetooth utility and frontend
## mousepad: lightweight text editor and code syntax highlighter made for Xfce
## galculator: common calculator
## gpicview: lightweight image viewer designed for LXDE
## engrampa: easy to use archive manager designed for MATE desktop
## mpv: video player, best performance, minimal ui
## android-file-transfer: needed for transferring files to/from android devices
## xorg-xinput: mouse and trackpad control (needed by script included in extra)
## vboot-utils: cgpt partition flags for chromebooks (used by install script)
##
pacman -Syu --noconfirm sudo unzip zip xf86-video-fbdev alsa-utils xorg-server \
xfce4 xorg-xinit lightdm lightdm-gtk-greeter ttf-dejavu \
networkmanager nm-connection-editor network-manager-applet firefox blueman \
mousepad galculator gpicview engrampa mpv android-file-transfer xorg-xinput \
vboot-utils
###########################################################################

###########################################################################
## VIDEO PATCH
##
## DEPENDS ON: xf86-video-fbdev
##
## Create configuration file to implement graphics acceleration
mkdir -p /etc/X11/xorg.conf.d/
cat << EOF > /etc/X11/xorg.conf.d/10-monitor.conf
Section	"Device"
	Identifier	"Mali FBDEV"
	Driver		"fbdev"
	Option		"fbdev"			"/dev/fb0"
	Option		"Fimg2Dexa"		"false"
	Option		"DRI2"			"true"
	Option		"DRI2_PAGE_FLIP"	"false"
	Option		"DRI2_WAIT_VSYNC"	"true"
	Option		"SWcursorLCD"		"false"
EndSection

Section	"Screen"
	Identifier	"DefaultScreen"
	Device		"Mali FBDEV"
	DefaultDepth	24
EndSection
EOF
## With this driver setup, the Xorg Server needs root privilege
echo "needs_root_rights = yes" > /etc/X11/Xwrapper.config
###########################################################################

###########################################################################
## AUDIO PATCH
##
## DEPENDS ON: alsa-utils
##
## UNMUTE. TO UNMUTE MANUALLY, RUN "alsamixer",
## USE RIGHT ARROW, AND PRESS "m" TO UNMUTE THE FOLLOWING:
## (alsamixer options won't load after pulseaudio is installed)
## (in that case you muse use these amixer commands)
amixer -c 0 set 'Left Headphone Mixer Left DAC1' on
amixer -c 0 set 'Right Headphone Mixer Right DAC1' on
amixer -c 0 set 'Left Speaker Mixer Left DAC1' on
amixer -c 0 set 'Right Speaker Mixer Right DAC1' on
## DOES A MICROPHONE NEED TO BE UNMUTED?
##
## SET VOLUME (DEFAULT IS ZERO)
amixer -c 0 set Headphone 70%
amixer -c 0 set Speaker 70%
##
## PLUGGING-IN/UNPLUGGING HEADPHONES WILL NOT MUTE/UNMUTE THE SPEAKER
## (with pulseaudio you can only run speaker or headphones not both,
## and must manually change between the two)
## THIS MUST BE CONTROLLED MANUALLY BY THE USER
##
## SAVE SETTINGS AFTER UNMUTING HEADPHONES AND SPEAKER
## THIS ALSO CREATES A FILE SO THAT CHANGES ALWAYS PERSIST ACROSS REBOOTS
## SO THIS ONLY NEEDS TO BE RUN ONCE
alsactl store
##
## the package "pulseaudio-alsa" installs /etc/asound.conf, which is needed
## at least for the ability to listen to multiple streams at once.
###########################################################################


## Configure sudo
## Append wheel group line to /etc/sudoers file through visudo.
## This allows root privilege to users who are members of the wheel group
## This is an easy way to automate this but a cheap solution, because
## a similar line already exists in the file but is commented out, and
## because if this script is run again, this will be appended again.
## Should probably use sed, or just copy a new file in without depending
## on getting sudo, but does installing sudo overwrite the sudoers file?
echo -e '\n# Allow members of group wheel to execute any command\n%wheel\tALL=(ALL:ALL) ALL' | EDITOR='tee -a' visudo


###########################################################################
## CAPS LOCK PATCH (FOR WINDOW ENVIRONMENT NOT CONSOLE)
##
## THIS WILL PROVIDE CAPS LOCK GLOBALLY, FOR ALL USERS, EVEN AT LOGIN.
## THIS CHANGES THE CONFIGURATION FOR "Generic 105-key PC (intl.)" AND
## OTHER GENERIC KEYBOARDS. IF YOU INSTEAD CHOOSE A CHROMEBOOK KEYBOARD
## IN THE LAYOUT SETTINGS OF YOUR DESKTOP ENVIRONMENT, THEN YOU
## WILL GET THE TRUE CHROMEBOOK EXPERIENCE: NO CAPS LOCK.
## Backup the original keyboard configuration file
echo "Fixing Caps Lock for X11 Windowing"
cp -n /usr/share/X11/xkb/symbols/pc /usr/share/X11/xkb/symbols/pc.bak
## Create a new custom file
sed 's/key <LWIN> {\t\[ Super_L/key <LWIN> {\t\[ Caps_Lock/g' \
/usr/share/X11/xkb/symbols/pc > /usr/share/X11/xkb/symbols/pc-chrome-caps
## Overwrite the old file with the new custom file
cp /usr/share/X11/xkb/symbols/pc-chrome-caps /usr/share/X11/xkb/symbols/pc
echo "Caps Lock for X11 Windows fixed."
## You must reboot for changes to take effect
#reboot
## You can restore the original file at any time
#cp /usr/share/X11/xkb/symbols/pc.bak /usr/share/X11/xkb/symbols/pc
## X11 CAPS LOCK, PER USER, PER SESSION: THE SIMPLE WAY
## Alternatively, you could just run the following command, but you would have
## to run it upon every login, for every user.
#xmodmap -e "keycode 133 = Caps_Lock"
## To load it on X11 login every time for that user...
## (This may not work for the root user, and may not work for all systems)
#echo "keycode 133 = Caps_Lock" > ~/.Xmodmap
###########################################################################

## Configure being able to run "startx" to load Xfce
echo "exec startxfce4" > /etc/skel/.xinitrc

## Enable lightdm to load Xfce on boot
systemctl enable lightdm

## Enable WiFi gui autostart now that lightdm is autostarting Xfce
systemctl enable NetworkManager

# Enable Bluetooth user interface (different from turning bluetooth on)
systemctl enable bluetooth

## Remove old packages
pacman --noconfirm -Sc

## Now that that's all done, restore the default login prompt
echo "Arch Linux \r (\l)" > /etc/issue
echo >> /etc/issue

## Uninstall setup files
rm /usr/local/bin/setup
rm /root/.aok-offline-setup-done.temp

## Exit message
echo
echo "Done."
echo

## REBOOT TO LOAD UPGRADED KERNEL, ETC
read -p "Press enter to reboot"
reboot

